{"version":3,"file":"static/js/399.86bcf0d2.chunk.js","mappings":"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","sources":["pages/LoginSignup.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './CSS/LoginSignup.scss';\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { MdEmail } from \"react-icons/md\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\n\r\nfunction LoginSignup({ setIsAuthenticated }) {\r\n  const [action, setAction] = useState(\"Login\");\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => {\r\n    let formErrors = {};\r\n    \r\n    if (action === \"Sign Up\" && !name) {\r\n      formErrors.name = \"Name is required.\";\r\n    }\r\n\r\n    if (!email) {\r\n      formErrors.email = \"Email is required.\";\r\n    } else if (!/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/.test(email)) {\r\n      formErrors.email = \"Email is invalid.\";\r\n    }\r\n\r\n    if (!password) {\r\n      formErrors.password = \"Password is required.\";\r\n    } else if (password.length < 6) {\r\n      formErrors.password = \"Password must be at least 6 characters.\";\r\n    }\r\n\r\n    setErrors(formErrors);\r\n    return Object.keys(formErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      setIsAuthenticated(true);  // Update authentication status to true\r\n      navigate('/');  // Redirect to the \"Shop\" page after submission\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className=\"header\">\r\n        <div className=\"text\">{action}</div>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n      <div className='inputs'>\r\n        {action === \"Login\" ? null :\r\n          <div className=\"input\">\r\n            <FaUser className='icon' /> \r\n            <input \r\n              type='text' \r\n              placeholder='Name' \r\n              value={name} \r\n              onChange={(e) => setName(e.target.value)} \r\n            />\r\n            {errors.name && <div className=\"error\">{errors.name}</div>}\r\n          </div>}\r\n        <div className=\"input\">\r\n          <MdEmail className='icon' /> \r\n          <input \r\n            type='email' \r\n            placeholder='Email' \r\n            value={email} \r\n            onChange={(e) => setEmail(e.target.value)} \r\n          />\r\n          {errors.email && <div className=\"error\">{errors.email}</div>}\r\n        </div>\r\n        <div className=\"input\">\r\n          <RiLockPasswordLine className='icon' /> \r\n          <input \r\n            type='password' \r\n            placeholder='Password' \r\n            value={password} \r\n            onChange={(e) => setPassword(e.target.value)} \r\n          />\r\n          {errors.password && <div className=\"error\">{errors.password}</div>}\r\n        </div>\r\n      </div>\r\n      {action === \"Sign Up\" ? null :\r\n        <div className=\"forgot-password\">\r\n          Lost Password? <span>Click Here</span>\r\n        </div>}\r\n      <div className=\"submit-container\">\r\n        <div className='submits'>\r\n          <span \r\n            className={action === \"Login\" ? \"gray\" : \"submit\"} \r\n            onClick={() => { setAction(\"Sign Up\"); setErrors({}); }}\r\n          >\r\n            Sign Up\r\n          </span>\r\n          <span \r\n            className={action === \"Sign Up\" ? \"gray\" : \"submit\"} \r\n            onClick={() => { setAction(\"Login\"); setErrors({}); }}\r\n          >\r\n            Login\r\n          </span>\r\n        </div>\r\n        <button className=\"submit-btn\" onClick={handleSubmit}>\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginSignup;\r\n"],"names":["_ref","setIsAuthenticated","action","setAction","useState","name","setName","email","setEmail","password","setPassword","errors","setErrors","navigate","useNavigate","_jsxs","className","children","_jsx","FaUser","type","placeholder","value","onChange","e","target","MdEmail","RiLockPasswordLine","onClick","preventDefault","validateForm","formErrors","test","length","Object","keys"],"sourceRoot":""}